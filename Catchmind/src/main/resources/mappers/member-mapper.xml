<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

 	<resultMap type="member" id="memberResultSet">
 	 	<result column="USER_NO" property="userNo"/>
 		<result column="USER_ID" property="userId"/>
 		<result column="USER_PWD" property="userPwd"/>
 		<result column="EMAIL" property="email"/>
 		<result column="NICKNAME" property="nickname"/>
 		<result column="USER_NAME" property="userName"/>
 		<result column="BIRTHDAY" property="birthDay"/>
 		<result column="MBTI" property="mbti"/>
 		<result column="PHONE" property="phone"/>
 		<result column="HEIGHT" property="height"/>
 		<result column="GENDER" property="gender"/>
 		<result column="PROFILE" property="profile"/>
 		<result column="RECENT_LOGIN" property="recentLogin"/>
 		<result column="RECENT_LOGOUT" property="recentLogout"/>
 		<result column="PARTNER" property="partner"/>
 		<result column="STATUS" property="status"/>
 		<result column="PIC" property="pic"/>
 		<result column="LONGITUDE" property="longitude"/>
 		<result column="LATITUDE" property="latitude"/>
 	</resultMap>
 	
 	<select id="selectMember" parameterType="_int" resultMap="memberResultSet">
 		SELECT *
 		FROM TB_MEMBER
 		WHERE USER_NO = #{result}
 	</select>
 	
 	<!-- 로그인(select) : 수빈 -->
 	<select id="loginMember" parameterType="member" resultMap="memberResultSet">
 		SELECT *
		  FROM TB_MEMBER
		 WHERE USER_ID = LOWER(#{userId})
		   AND USER_PWD = #{userPwd}
		   AND STATUS = 0
 	</select>
 	
 	<!-- 아이디 중복 체크(select) : 수빈-->
 	<select id="idCheck" parameterType="string" resultType="_int">
 		SELECT COUNT(*)
 		  FROM TB_MEMBER
 		 WHERE USER_ID = LOWER(#{checkId})
 	</select>
 	
 	<!-- 아이디 찾기(select) : 수빈 -->
 	<select id="findId" parameterType="member" resultMap="memberResultSet">
 		SELECT *
 		  FROM TB_MEMBER
 		 WHERE USER_NAME = #{userName}
 		   AND EMAIL = #{email}
 	</select>
 	
 	<!-- 비밀번호찾기 - step2) 일치 회원 찾기 (select) : 수빈 -->
 	<select id="findPwd" parameterType="member" resultMap="memberResultSet">
 		SELECT *
 		  FROM TB_MEMBER
 		 WHERE USER_ID = LOWER(#{userId})
 		   AND USER_NAME = #{userName}
 		   AND EMAIL = #{email}
 	</select>
 	
 	<!-- 비밀번호 찾기 - step3) 변경 서비스(update) : 수빈 -->
 	<update id="changePwd" parameterType="member">
 		UPDATE TB_MEMBER
 		   SET USER_PWD = #{userPwd}
 		 WHERE USER_ID = #{userId}
 	</update>
 	
 	<!-- 닉네임 중복체크 서비스(select) : 수빈 -->
 	<select id="nicknameCheck" parameterType="string" resultType="_int">
 		SELECT COUNT(*)
 		  FROM TB_MEMBER
 		 WHERE NICKNAME = #{nickname}
 	</select>
 	
	<select id="selectMemberCount" resultType="_int">
		SELECT COUNT(*)
		FROM TB_MEMBER
		WHERE STATUS = '0'
	</select>
	
	<select id="selectMemberList" resultMap="memberResultSet">
		SELECT *
		FROM TB_MEMBER
        WHERE USER_ID != 'admin'
		<!-- (1)일반/블랙/탈퇴회원 모두 조회할 수 있도록
			 WHERE STATUS='0' 구문 삭제했습니다 
			 (2)admin 제외하고 뜨도록 수정했습니다: 수빈 -->
	</select>
	
	<update id="blackMember" parameterType="string">
		UPDATE TB_MEMBER
		SET STATUS = '2'
		WHERE USER_ID = #{userId}
		<!-- SET STATUS='3' 구문 변경했습니다 : 수빈 -->
	</update>
	
	<!-- 회원상태 복구 (update) : 수빈-->
	<update id="recoverMember" parameterType="string">
		UPDATE TB_MEMBER
		SET STATUS = '0'
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 회원상태 탈퇴 (update) : 수빈 -->
	<update id="deleteMember" parameterType="string">
		UPDATE TB_MEMBER
		SET STATUS = '1'
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 회원가입(insert) : 수빈 -->
	<insert id="insertMember" parameterType="member">
		INSERT INTO TB_MEMBER(	USER_NO,
								USER_ID,
								USER_PWD,
								EMAIL,
								NICKNAME,
								USER_NAME,
								BIRTHDAY,
								MBTI,
								PHONE,
								STATUS,
								PIC)
		VALUES(SEQ_MNO.NEXTVAL,
				LOWER(#{userId}),
				#{userPwd},
				#{email},
				#{nickname},
				#{userName},
				#{birthDay},
				UPPER(#{mbti}),
				REPLACE(#{phone},',','-'),
				#{status},
				#{pic})
	</insert>
	
	<select id="matchList" parameterType="member" resultMap="memberResultSet">
		SELECT *
		FROM TB_MEMBER
	</select>
	
	<!--  로그인 시 최근 접속 기록 업데이트(udate) : 수빈-->
	<update id="updateRecentLogin" parameterType="member">
		UPDATE TB_MEMBER
		   SET RECENT_LOGIN = SYSDATE,
		       RECENT_LOGOUT = NULL 
		 WHERE USER_ID = #{userId}
	</update>
	
	<update id="updateRecentLogout" parameterType="string">
		UPDATE TB_MEMBER 
		   SET RECENT_LOGOUT = SYSDATE 
		 WHERE USER_ID = #{userId}
	</update>
	
	<update id="updateRefreshSession" parameterType="string">
		UPDATE TB_MEMBER 
		   SET RECENT_LOGOUT = NULL 
		 WHERE USER_ID = #{userId}
	</update>
	
	<select id="selectFollowList" parameterType="_int" resultMap="memberResultSet">
		SELECT USER_NO, USER_ID, NICKNAME, MBTI, PROFILE, PIC, RECENT_LOGOUT 
		FROM TB_FOLLOW  
		JOIN TB_MEMBER ON(USER_NO = FOED_USER) 
		WHERE FO_USER = #{userNo}
	</select>
	
	<select id="selectBlockList" parameterType="_int" resultMap="memberResultSet">
		SELECT M.USER_NO, USER_ID, NICKNAME, MBTI, PROFILE, PIC 
		FROM TB_BLOCK B 
		JOIN TB_MEMBER M ON(M.USER_NO=BLOCKED_USER) 
		WHERE B.USER_NO = #{userNo}
	</select>
	
	<delete id="deleteBlockMember" parameterType="block">
		DELETE FROM TB_BLOCK 
		 WHERE USER_NO = #{userNo} 
		   AND BLOCKED_USER = #{blockedUser}
	</delete>
	
	<update id="updateProfile">
		UPDATE TB_MEMBER
		   SET PIC = #{pic},
		       MBTI = #{mbti},
		       NICKNAME = #{nickname},
		       PROFILE = #{profile}
		 WHERE USER_ID = #{userId}
	</update>
	
	<update id="loginSignal" parameterType="_int">
		UPDATE TB_MEMBER
		SET RECENT_LOGOUT = SYSDATE
		WHERE USER_NO = #{userNo}
	</update>
	
	<update id="updateInfo">
		UPDATE TB_MEMBER
		   SET GENDER = #{gender},
		       BIRTHDAY = #{birthDay},
		       PHONE = #{phone},
		       EMAIL = #{email},
		       LONGITUDE = #{longitude},
		       LATITUDE = #{latitude},
		       HEIGHT = #{height}
		 WHERE USER_ID = #{userId}
	</update>

	<delete id="unfollowMember" parameterType="follow">
		DELETE FROM TB_FOLLOW 
		 WHERE FO_USER = #{foUser} 
		   AND FOED_USER = #{foedUser}
	</delete>
	
 	<select id="originPwdCheck" parameterType="string" resultType="_int">
 		SELECT COUNT(*)
 		  FROM TB_MEMBER
 		 WHERE USER_PWD = #{checkOriginPwd}
 	</select>
	
	<update id="infoUpdatePwd" parameterType="member">
		UPDATE TB_MEMBER
		   SET USER_PWD = #{userPwd}
		 WHERE USER_ID = #{userId}
	</update>
	
	<select id="selectRequestList" parameterType="member" resultMap="memberResultSet">
		SELECT USER_NO, PIC, NICKNAME
		  FROM TB_MEMBER
		 WHERE PARTNER = #{userNo}
		   AND NOT(USER_NO = #{partner})
	</select>
	
	<select id="selectCoupleNo" parameterType="string" resultType="string">
		SELECT USER_NO
		  FROM TB_MEMBER
		 WHERE USER_ID = #{userId}
	</select>
	
	<update id="updateCoupleId" parameterType="member">
		UPDATE TB_MEMBER
		   SET PARTNER = #{partner}
		 WHERE USER_NO = #{userNo}
	</update>
	
	<update id="refuseCouple">
		UPDATE TB_MEMBER
		   SET PARTNER = 0
		 WHERE USER_NO = #{partner}
	</update>
	
</mapper>
